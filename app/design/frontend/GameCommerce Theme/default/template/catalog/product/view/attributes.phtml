<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2006-2020 Magento, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product additional attributes template
 *
 * @see Mage_Catalog_Block_Product_View_Attributes
 */
?>
<?php
    $_helper = $this->helper('catalog/output');
    $_product = $this->getProduct();
?>
<?php if($_additional = $this->getAdditionalData()): ?>
    <h2><?php echo $this->__('System Requirements') ?></h2>
Minimum Requirements<br>
       <?php
       $groups = Mage::getModel('eav/entity_attribute_group')
           ->getResourceCollection()
           ->setAttributeSetFilter($_product->getAttributeSetId())
           ->setSortOrder()
           ->load();
       
       foreach ($groups as $group) {   if($group->getAttributeGroupName() == 'Minimum Requirements'){ 

        $attributes = Mage::getResourceModel('catalog/product_attribute_collection')
        ->setAttributeGroupFilter($group->getId())
        ->addVisibleFilter()
        ->checkConfigurableProducts()
        ->load();

        if ($attributes->getSize() > 0) {
            foreach ($attributes->getItems() as $attribute) {
                /* @var $child Mage_Eav_Model_Entity_Attribute */
                $attributeCodes[] = array('code' => $attribute->getAttributeCode(), 'type' => $attribute->getBackendType(), 'label' => $attribute->getFrontendLabel());  
                //Mage::Log($attribute->debug());

            }
            foreach ($attributeCodes as $attributeCode) {
                $attrValue =  $_product->getData($attributeCode['code']);
                if(isset($attrValue)){
                    echo '<strong>'. $attributeCode['label'] .': </strong>'. $attrValue."<br>";
                } // if
            } // foreach
          }}         } ?>
          <br>  <br>
          Recomended Requirements<br>


          <?php
       $grecomended = Mage::getModel('eav/entity_attribute_group')
           ->getResourceCollection()
           ->setAttributeSetFilter($_product->getAttributeSetId())
           ->setSortOrder()
           ->load();
       
       foreach ($grecomended as $group1) {   if($group1->getAttributeGroupName() == 'Recomended Requirements'){ 

        $recattributes = Mage::getResourceModel('catalog/product_attribute_collection')
        ->setAttributeGroupFilter($group1->getId())
        ->addVisibleFilter()
        ->checkConfigurableProducts()
        ->load();

        if ($recattributes->getSize() > 0) {
            foreach ($recattributes->getItems() as $attribute1) {
                /* @var $child Mage_Eav_Model_Entity_Attribute */
                $attributeCodes1[] = array('code' => $attribute1->getAttributeCode(), 'type' => $attribute1->getBackendType(), 'label' => $attribute1->getFrontendLabel());  
                //Mage::Log($attribute->debug());

            }
            foreach ($attributeCodes1 as $attributeCode1) {
                $attrValue1 =  $_product->getData($attributeCode1['code']);
                if(isset($attrValue1)){
                    echo '<strong>'. $attributeCode1['label'] .': </strong>'. $attrValue1."<br>";
                } // if
            } // foreach
          }}} 
?>
     

    <script type="text/javascript">decorateTable('product-attribute-specs-table')</script>
<?php endif;?>


